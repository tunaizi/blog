import{Z as s,r as n,i as a,b as l,j as o,h as e,o as t,p,e as r,$ as i,t as c,f as D,s as F,u as y,a as u}from"./chunks/framework.233c72da.js";import{g as d}from"./chunks/index.2a973751.js";const g={class:"demo"},h={__name:"ListBasic",setup(c){const D=s([1,2,3,4,5]);let F=D.length+1;function y(){D.splice(d(),0,F++)}function u(){D.splice(d(),1)}function d(){return Math.floor(Math.random()*D.length)}return(s,c)=>(n(),a("div",g,[l("button",{onClick:y},"Add at random index"),l("button",{onClick:u},"Remove at random index"),o(i,{name:"list",tag:"ul",style:{"margin-top":"20px"}},{default:e((()=>[(n(!0),a(t,null,p(D,(s=>(n(),a("li",{key:s},r(s),1)))),128))])),_:1})]))}},B={class:"demo"},m={__name:"ListMove",setup(s){const D=c([1,2,3,4,5]);let F=D.value.length+1;function y(){D.value.splice(d(),0,F++)}function u(){D.value.splice(d(),1)}function d(){return Math.floor(Math.random()*D.value.length)}return(s,c)=>(n(),a("div",B,[l("button",{onClick:y},"Add"),l("button",{onClick:u},"Remove"),l("button",{onClick:c[0]||(c[0]=s=>function(s){let n,a=s.length;for(;0!=a;)n=Math.floor(Math.random()*a),a--,[s[a],s[n]]=[s[n],s[a]];return s}(D.value))},"Shuffle"),o(i,{name:"list2",tag:"ul",style:{"margin-top":"20px"}},{default:e((()=>[(n(!0),a(t,null,p(D.value,(s=>(n(),a("li",{class:"list-item",key:s},r(s),1)))),128))])),_:1})]))}},f={class:"demo",style:{height:"265px"}},v=["data-index"],C={__name:"ListStagger",setup(s){const u=[{msg:"Bruce Lee"},{msg:"Jackie Chan"},{msg:"Chuck Norris"},{msg:"Jet Li"},{msg:"Kung Fury"}],g=c(""),h=D((()=>u.filter((s=>s.msg.toLowerCase().includes(g.value.toLowerCase())))));function B(s){s.style.opacity=0,s.style.height=0}function m(s,n){d.to(s,{opacity:1,height:"1.6em",delay:.15*s.dataset.index,onComplete:n})}function C(s,n){d.to(s,{opacity:0,height:0,delay:.15*s.dataset.index,onComplete:n})}return(s,c)=>(n(),a("div",f,[F(l("input",{"onUpdate:modelValue":c[0]||(c[0]=s=>g.value=s),style:{"margin-bottom":"20px"}},null,512),[[y,g.value]]),o(i,{tag:"ul",css:!1,onBeforeEnter:B,onEnter:m,onLeave:C},{default:e((()=>[(n(!0),a(t,null,p(h.value,((s,l)=>(n(),a("li",{key:s.msg,"data-index":l},r(s.msg),9,v)))),128))])),_:1})]))}},E=JSON.parse('{"title":"TransitionGroup","description":"","frontmatter":{},"headers":[{"level":2,"title":"Differences from <Transition>","slug":"differences-from-transition","link":"#differences-from-transition","children":[]},{"level":2,"title":"Enter / Leave Transitions","slug":"enter-leave-transitions","link":"#enter-leave-transitions","children":[]},{"level":2,"title":"Move Transitions","slug":"move-transitions","link":"#move-transitions","children":[]},{"level":2,"title":"Staggering List Transitions","slug":"staggering-list-transitions","link":"#staggering-list-transitions","children":[]}],"relativePath":"guide/built-ins/transition-group.md","filePath":"guide/built-ins/transition-group.md"}'),A={name:"guide/built-ins/transition-group.md"},b=Object.assign(A,{setup:s=>(s,l)=>(n(),a("div",null,[l[0]||(l[0]=u('<h1 id="transitiongroup" tabindex="-1">TransitionGroup <a class="header-anchor" href="#transitiongroup" aria-label="Permalink to &quot;TransitionGroup {#transitiongroup}&quot;">​</a></h1><p><code>&lt;TransitionGroup&gt;</code> is a built-in component designed for animating the insertion, removal, and order change of elements or components that are rendered in a list.</p><h2 id="differences-from-transition" tabindex="-1">Differences from <code>&lt;Transition&gt;</code> <a class="header-anchor" href="#differences-from-transition" aria-label="Permalink to &quot;Differences from `&lt;Transition&gt;` {#differences-from-transition}&quot;">​</a></h2><p><code>&lt;TransitionGroup&gt;</code> supports the same props, CSS transition classes, and JavaScript hook listeners as <code>&lt;Transition&gt;</code>, with the following differences:</p><ul><li><p>By default, it doesn&#39;t render a wrapper element. But you can specify an element to be rendered with the <code>tag</code> prop.</p></li><li><p><a href="./transition.html#transition-modes">Transition modes</a> are not available, because we are no longer alternating between mutually exclusive elements.</p></li><li><p>Elements inside are <strong>always required</strong> to have a unique <code>key</code> attribute.</p></li><li><p>CSS transition classes will be applied to individual elements in the list, <strong>not</strong> to the group / container itself.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When used in <a href="/guide/essentials/component-basics.html#in-dom-template-parsing-caveats">in-DOM templates</a>, it should be referenced as <code>&lt;transition-group&gt;</code>.</p></div><h2 id="enter-leave-transitions" tabindex="-1">Enter / Leave Transitions <a class="header-anchor" href="#enter-leave-transitions" aria-label="Permalink to &quot;Enter / Leave Transitions {#enter-leave-transitions}&quot;">​</a></h2><p>Here is an example of applying enter / leave transitions to a <code>v-for</code> list using <code>&lt;TransitionGroup&gt;</code>:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TransitionGroup</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">tag</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ul</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;"> in </span><span style="color:#BABED8;">items</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">{{</span><span style="color:#BABED8;"> item </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">TransitionGroup</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-enter-active</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-leave-active</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> all </span><span style="color:#F78C6C;">0.5s</span><span style="color:#BABED8;"> ease</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-enter-from</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-leave-to</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">30px</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>',10)),o(h),l[1]||(l[1]=u('<h2 id="move-transitions" tabindex="-1">Move Transitions <a class="header-anchor" href="#move-transitions" aria-label="Permalink to &quot;Move Transitions {#move-transitions}&quot;">​</a></h2><p>The above demo has some obvious flaws: when an item is inserted or removed, its surrounding items instantly &quot;jump&quot; into place instead of moving smoothly. We can fix this by adding a few additional CSS rules:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-move</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">/* apply transition to moving elements */</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-enter-active</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-leave-active</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> all </span><span style="color:#F78C6C;">0.5s</span><span style="color:#BABED8;"> ease</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-enter-from</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-leave-to</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">30px</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line highlighted"><span style="color:#676E95;font-style:italic;">/* ensure leaving items are taken out of layout flow so that moving</span></span>\n<span class="line highlighted"><span style="color:#676E95;font-style:italic;">   animations can be calculated correctly. */</span></span>\n<span class="line highlighted"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">list-leave-active</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line highlighted"><span style="color:#BABED8;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> absolute</span><span style="color:#89DDFF;">;</span></span>\n<span class="line highlighted"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Now it looks much better - even animating smoothly when the whole list is shuffled:</p>',4)),o(m),l[2]||(l[2]=u('<p><a href="/examples/#list-transition">Full Example</a></p><h2 id="staggering-list-transitions" tabindex="-1">Staggering List Transitions <a class="header-anchor" href="#staggering-list-transitions" aria-label="Permalink to &quot;Staggering List Transitions {#staggering-list-transitions}&quot;">​</a></h2><p>By communicating with JavaScript transitions through data attributes, it&#39;s also possible to stagger transitions in a list. First, we render the index of an item as a data attribute on the DOM element:</p><div class="language-template"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TransitionGroup</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">tag</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ul</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  :</span><span style="color:#C792EA;">css</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C792EA;">before-enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">onBeforeEnter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C792EA;">enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">onEnter</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  @</span><span style="color:#C792EA;">leave</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">onLeave</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">, </span><span style="color:#BABED8;">index</span><span style="color:#89DDFF;">) in </span><span style="color:#BABED8;">computedList</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    :</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">msg</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line highlighted"><span style="color:#89DDFF;">    :</span><span style="color:#C792EA;">data-index</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">index</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">  &gt;</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">{{</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">msg </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">TransitionGroup</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>Then, in JavaScript hooks, we animate the element with a delay based on the data attribute. This example is using the <a href="https://greensock.com/" target="_blank" rel="noreferrer">GreenSock library</a> to perform the animation:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">onEnter</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">done</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">gsap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    opacity</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    height</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.6em</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line highlighted"><span style="color:#F07178;">    delay</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">index</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.15</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    onComplete</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">done</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>',6)),o(C),l[3]||(l[3]=u('<div class="composition-api"><p><a href="https://play.vuejs.org/#eNqlVMuu0zAQ/ZVRNklRm7QLWETtBW4FSFCxYkdYmGSSmjp28KNQVfl3xk7SFyvEponPGc+cOTPNOXrbdenRYZRHa1Nq3lkwaF33VEjedkpbOIPGeg6lajtnsYIeaq1aiOlSfAlqDOtG3L8SUchSSWNBcPrZwNdCAqVqTZND/KxdibBDjKGf3xIfWXngCNs9k4/Udu/KA3xWWnPz1zW0sOOP6CcnG3jv9ImIQn67SvrpUJ9IE/WVxPHsSkw97gbN0zFJZrB5grNPrskcLUNXac2FRZ0k3GIbIvxLSsVTq3bqF+otM5jMUi5L4So0SSicHplwOKOyfShdO1lariQo+Yy10vhO+qwoZkNFFKmxJ4Gp6ljJrRe+vMP3yJu910swNXqXcco1h0pJHDP6CZHEAAcAYMydwypYCDAkJRdX6Sts4xGtUDAKotIVs9Scpd4q/A0vYJmuXo5BSm7JOIEW81DVo77VR207ZEf8F23LB23T+X9VrbNh82nn6UAz7ASzSCeANZe0AnBctIqqbIoojLCIIBvoL5pJw31DH7Ry3VDKsoYinSii4ZyXxhBQM2Fwwt58D7NeoB8QkXfDvwRd2XtceOsCHkwc8KCINAk+vADJppQUFjZ0DsGVGT3uFn1KSjoPeKLoaYtvCO/rIlz3vH9O5FiU/nXny/pDT6YGKZngg0/Zg1GErrMbp6N5NHxJFi3N/4dRkj5IYf5ULxCmiPJpI4rIr4kHimhvbWfyLHOyOzQpNZZ57jXNy4nRGFLTR/0fWBqe7w==" target="_blank" rel="noreferrer">Full Example in the Playground</a></p></div><div class="options-api"><p><a href="https://play.vuejs.org/#eNqtVE2P0zAQ/SujXNqgNmkPcIjaBbYCJKg4cSMcTDJNTB07+KNsVfW/M3aabNpyQltViT1vPPP8Zian6H3bJgeHURatTKF5ax9yyZtWaQuVYS3stGpg4peTXOayUNJYEJwea/ieS4ATNKbKYPKoXYGwRZzAeTYGPrNizxE2NZO30KZ2xR6+Kq25uTuGFrb81vrFyQo+On0kIJc/PCV8CmxL3DEnLJy8e8ksm8bdGkCjdVr2O4DfDvWRgtGN/JYC0SOkKVTTOotl1jv3hi3d+DngENILkey4sKinU26xiWH9AH6REN/Eqq36g3rDDE7jhMtCuBLN1NbcJIFEHN9RaNDWqjQDAyUfcac0fpA+CYoRCRSJsUeBiWpZwe2RSrK4w2rkVe2rdYG6LD5uH3EGpZI4iuurTdwDNBjpRJclg+UlhP914UnMZfIGm8kIKVEwciYivhoGLQlQ4hO8gkWyfD1yVHJDKgu0mAUmPXLuxRkYb5Ed8H8YL/7BeGx7Oa6hkLmk/yodBoo21BKtYBZpB7DikroKDvNGUeZ1HoVmyCNIO/ibZtJwy5X8pJVru9CWVeTpRB51+6wwhgw7Jgz2tnc/Q6/M0ZeWwKvmGZye0Wu78PIGexC6swdGxEnw/q6HOYUkt9DwMwhKxfS6GpY+KPHc45G8+6EYAV7reTjucf/uwUtSmvvTME1wDuISlVTwTqf0RiiyrtKR0tEs6r5l84b645dRkr5zoT8oXwBMHg2Tlke+jbwhj2prW5OlqZPtvkroYqnH3lK9nLgI46scnf8Cn22kBA==" target="_blank" rel="noreferrer">Full Example in the Playground</a></p></div><hr><p><strong>Related</strong></p><ul><li><a href="/api/built-in-components.html#transitiongroup"><code>&lt;TransitionGroup&gt;</code> API reference</a></li></ul>',5))]))});export{E as __pageData,b as default};
