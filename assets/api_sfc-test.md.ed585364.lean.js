import{_ as e,r as a,i as t,a as l}from"./chunks/framework.8a6edf47.js";const v=JSON.parse('{"title":"Test-文档标题是不是可以链接过去","description":"","frontmatter":{"editLink":false,"sponsors":false},"headers":[{"level":2,"title":"总览","slug":"sfc-test-vir","link":"#sfc-test-vir","children":[]},{"level":2,"title":"总览","slug":"sfc-test-vir-1","link":"#sfc-test-vir-1","children":[]},{"level":2,"title":"总览","slug":"sfc-test-vir0","link":"#sfc-test-vir0","children":[]},{"level":2,"title":"总览","slug":"sfc-test-vir1","link":"#sfc-test-vir1","children":[]},{"level":2,"title":"总览","slug":"sfc-test-vir2","link":"#sfc-test-vir2","children":[]},{"level":2,"title":"总览","slug":"sfc-test-vir3","link":"#sfc-test-vir3","children":[]},{"level":2,"title":"总览","slug":"sfc-test-vir4","link":"#sfc-test-vir4","children":[]}],"relativePath":"api/sfc-test.md","filePath":"api/sfc-test.md"}'),o={name:"api/sfc-test.md"};function p(n,s,r,c,i,d){return a(),t("div",null,s[0]||(s[0]=[l(`<h1 id="sfc-test" tabindex="-1">Test-文档标题是不是可以链接过去 <a class="header-anchor" href="#sfc-test" aria-label="Permalink to &quot;Test-文档标题是不是可以链接过去 {#sfc-test}&quot;">​</a></h1><ul><li><p><strong>示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul><h2 id="sfc-test-vir" tabindex="-1">总览 <a class="header-anchor" href="#sfc-test-vir" aria-label="Permalink to &quot;总览 {#sfc-test-vir}&quot;">​</a></h2><ul><li><p><strong>示例示例示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul><h2 id="sfc-test-vir-1" tabindex="-1">总览 <a class="header-anchor" href="#sfc-test-vir-1" aria-label="Permalink to &quot;总览 {#sfc-test-vir-1}&quot;">​</a></h2><ul><li><p><strong>示例示例示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul><h2 id="sfc-test-vir0" tabindex="-1">总览 <a class="header-anchor" href="#sfc-test-vir0" aria-label="Permalink to &quot;总览 {#sfc-test-vir0}&quot;">​</a></h2><ul><li><p><strong>示例示例示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul><h2 id="sfc-test-vir1" tabindex="-1">总览 <a class="header-anchor" href="#sfc-test-vir1" aria-label="Permalink to &quot;总览 {#sfc-test-vir1}&quot;">​</a></h2><ul><li><p><strong>示例示例示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul><h2 id="sfc-test-vir2" tabindex="-1">总览 <a class="header-anchor" href="#sfc-test-vir2" aria-label="Permalink to &quot;总览 {#sfc-test-vir2}&quot;">​</a></h2><ul><li><p><strong>示例示例示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul><h2 id="sfc-test-vir3" tabindex="-1">总览 <a class="header-anchor" href="#sfc-test-vir3" aria-label="Permalink to &quot;总览 {#sfc-test-vir3}&quot;">​</a></h2><ul><li><p><strong>示例示例示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul><h2 id="sfc-test-vir4" tabindex="-1">总览 <a class="header-anchor" href="#sfc-test-vir4" aria-label="Permalink to &quot;总览 {#sfc-test-vir4}&quot;">​</a></h2><ul><li><p><strong>示例示例示例示例示例示例示例示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// 在一个 Node.js http 处理函数内</span></span>
<span class="line"><span style="color:#B392F0;">renderToNodeStream</span><span style="color:#E1E4E8;">(app).</span><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;">(res)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">备注</p><p><code>vue/server-renderer</code> 的 ESM 构建不支持此方法，因为它是与 Node.js 环境分离的。请换为使用 <a href="#pipetonodewritable"><code>pipeToNodeWritable</code></a>。</p></div></li></ul>`,16)]))}const h=e(o,[["render",p]]);export{v as __pageData,h as default};
