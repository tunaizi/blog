import{_ as s,r as a,i as n,a as l}from"./chunks/framework.ec0adba5.js";const p=JSON.parse('{"title":"Utility Types","description":"","frontmatter":{},"headers":[{"level":2,"title":"PropType<T>","slug":"proptype-t","link":"#proptype-t","children":[]},{"level":2,"title":"MaybeRef<T>","slug":"mayberef","link":"#mayberef","children":[]},{"level":2,"title":"MaybeRefOrGetter<T>","slug":"maybereforgetter","link":"#maybereforgetter","children":[]},{"level":2,"title":"ExtractPropTypes<T>","slug":"extractproptypes","link":"#extractproptypes","children":[]},{"level":2,"title":"ExtractPublicPropTypes<T>","slug":"extractpublicproptypes","link":"#extractpublicproptypes","children":[]},{"level":2,"title":"ComponentCustomProperties","slug":"componentcustomproperties","link":"#componentcustomproperties","children":[]},{"level":2,"title":"ComponentCustomOptions","slug":"componentcustomoptions","link":"#componentcustomoptions","children":[]},{"level":2,"title":"ComponentCustomProps","slug":"componentcustomprops","link":"#componentcustomprops","children":[]},{"level":2,"title":"CSSProperties","slug":"cssproperties","link":"#cssproperties","children":[]}],"relativePath":"api/utility-types.md","filePath":"api/utility-types.md"}');const o=s({name:"api/utility-types.md"},[["render",function(s,p,o,e,t,r){return a(),n("div",null,p[0]||(p[0]=[l('<h1 id="utility-types" tabindex="-1">Utility Types <a class="header-anchor" href="#utility-types" aria-label="Permalink to &quot;Utility Types {#utility-types}&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This page only lists a few commonly used utility types that may need explanation for their usage. For a full list of exported types, consult the <a href="https://github.com/vuejs/core/blob/main/packages/runtime-core/src/index.ts#L131" target="_blank" rel="noreferrer">source code</a>.</p></div><h2 id="proptype-t" tabindex="-1">PropType&lt;T&gt; <a class="header-anchor" href="#proptype-t" aria-label="Permalink to &quot;PropType\\&lt;T&gt; {#proptype-t}&quot;">​</a></h2><p>Used to annotate a prop with more advanced types when using runtime props declarations.</p><ul><li><p><strong>Example</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">PropType</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Book</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">author</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">year</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">book</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// provide more specific type to `Object`</span></span>\n<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Object </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">PropType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Book</span><span style="color:#89DDFF;">&gt;,</span></span>\n<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li><li><p><strong>See also</strong> <a href="./guide/typescript/options-api.html#typing-component-props">Guide - Typing Component Props</a></p></li></ul><h2 id="mayberef" tabindex="-1">MaybeRef&lt;T&gt; <a class="header-anchor" href="#mayberef" aria-label="Permalink to &quot;MaybeRef\\&lt;T&gt; {#mayberef}&quot;">​</a></h2><p>Alias for <code>T | Ref&lt;T&gt;</code>. Useful for annotating arguments of <a href="./guide/reusability/composables.html">Composables</a>.</p><ul><li>Only supported in 3.3+.</li></ul><h2 id="maybereforgetter" tabindex="-1">MaybeRefOrGetter&lt;T&gt; <a class="header-anchor" href="#maybereforgetter" aria-label="Permalink to &quot;MaybeRefOrGetter\\&lt;T&gt; {#maybereforgetter}&quot;">​</a></h2><p>Alias for <code>T | Ref&lt;T&gt; | (() =&gt; T)</code>. Useful for annotating arguments of <a href="./guide/reusability/composables.html">Composables</a>.</p><ul><li>Only supported in 3.3+.</li></ul><h2 id="extractproptypes" tabindex="-1">ExtractPropTypes&lt;T&gt; <a class="header-anchor" href="#extractproptypes" aria-label="Permalink to &quot;ExtractPropTypes\\&lt;T&gt; {#extractproptypes}&quot;">​</a></h2><p>Extract prop types from a runtime props options object. The extracted types are internal facing - i.e. the resolved props received by the component. This means boolean props and props with default values are always defined, even if they are not required.</p><p>To extract public facing props, i.e. props that the parent is allowed to pass, use <a href="#extractpublicproptypes"><code>ExtractPublicPropTypes</code></a>.</p><ul><li><p><strong>Example</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> propsOptions </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">bar</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Boolean</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">baz</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Number</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">qux</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Number</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">default</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Props</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ExtractPropTypes</span><span style="color:#89DDFF;">&lt;typeof</span><span style="color:#BABED8;"> propsOptions</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   foo?: string,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   bar: boolean,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   baz: number,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   qux: number</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span></code></pre></div></li></ul><h2 id="extractpublicproptypes" tabindex="-1">ExtractPublicPropTypes&lt;T&gt; <a class="header-anchor" href="#extractpublicproptypes" aria-label="Permalink to &quot;ExtractPublicPropTypes\\&lt;T&gt; {#extractpublicproptypes}&quot;">​</a></h2><p>Extract prop types from a runtime props options object. The extracted types are public facing - i.e. the props that the parent is allowed to pass.</p><ul><li><p><strong>Example</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> propsOptions </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">bar</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Boolean</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">baz</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Number</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">required</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">qux</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> Number</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">default</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>\n<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Props</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">ExtractPublicPropTypes</span><span style="color:#89DDFF;">&lt;typeof</span><span style="color:#BABED8;"> propsOptions</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   foo?: string,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   bar?: boolean,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   baz: number,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">//   qux?: number</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span></code></pre></div></li></ul><h2 id="componentcustomproperties" tabindex="-1">ComponentCustomProperties <a class="header-anchor" href="#componentcustomproperties" aria-label="Permalink to &quot;ComponentCustomProperties {#componentcustomproperties}&quot;">​</a></h2><p>Used to augment the component instance type to support custom global properties.</p><ul><li><p><strong>Example</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> axios </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">module</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ComponentCustomProperties</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    $http</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">axios</span></span>\n<span class="line"><span style="color:#F07178;">    $translate</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">key</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Augmentations must be placed in a module <code>.ts</code> or <code>.d.ts</code> file. See <a href="./guide/typescript/options-api.html#augmenting-global-properties">Type Augmentation Placement</a> for more details.</p></div></li><li><p><strong>See also</strong> <a href="./guide/typescript/options-api.html#augmenting-global-properties">Guide - Augmenting Global Properties</a></p></li></ul><h2 id="componentcustomoptions" tabindex="-1">ComponentCustomOptions <a class="header-anchor" href="#componentcustomoptions" aria-label="Permalink to &quot;ComponentCustomOptions {#componentcustomoptions}&quot;">​</a></h2><p>Used to augment the component options type to support custom options.</p><ul><li><p><strong>Example</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Route</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-router</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">module</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ComponentCustomOptions</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    beforeRouteEnter</span><span style="color:#89DDFF;">?(</span><span style="color:#BABED8;font-style:italic;">to</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">from</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Augmentations must be placed in a module <code>.ts</code> or <code>.d.ts</code> file. See <a href="./guide/typescript/options-api.html#augmenting-global-properties">Type Augmentation Placement</a> for more details.</p></div></li><li><p><strong>See also</strong> <a href="./guide/typescript/options-api.html#augmenting-custom-options">Guide - Augmenting Custom Options</a></p></li></ul><h2 id="componentcustomprops" tabindex="-1">ComponentCustomProps <a class="header-anchor" href="#componentcustomprops" aria-label="Permalink to &quot;ComponentCustomProps {#componentcustomprops}&quot;">​</a></h2><p>Used to augment allowed TSX props in order to use non-declared props on TSX elements.</p><ul><li><p><strong>Example</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">module</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ComponentCustomProps</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    hello</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{}</span></span></code></pre></div><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// now works even if hello is not a declared prop</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MyComponent</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">hello</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Augmentations must be placed in a module <code>.ts</code> or <code>.d.ts</code> file. See <a href="./guide/typescript/options-api.html#augmenting-global-properties">Type Augmentation Placement</a> for more details.</p></div></li></ul><h2 id="cssproperties" tabindex="-1">CSSProperties <a class="header-anchor" href="#cssproperties" aria-label="Permalink to &quot;CSSProperties {#cssproperties}&quot;">​</a></h2><p>Used to augment allowed values in style property bindings.</p><ul><li><p><strong>Example</strong></p><p>Allow any custom CSS property</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">module</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">interface</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">CSSProperties</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    [</span><span style="color:#BABED8;font-style:italic;">key</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">--</span><span style="color:#89DDFF;">${</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">}`</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">={</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">--bg-color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">blue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}&gt;</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ &#39;--bg-color&#39;: &#39;blue&#39; }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Augmentations must be placed in a module <code>.ts</code> or <code>.d.ts</code> file. See <a href="./guide/typescript/options-api.html#augmenting-global-properties">Type Augmentation Placement</a> for more details.</p></div><div class="info custom-block"><p class="custom-block-title">See also</p><p>SFC <code>&lt;style&gt;</code> tags support linking CSS values to dynamic component state using the <code>v-bind</code> CSS function. This allows for custom properties without type augmentation.</p><ul><li><a href="./api/sfc-css-features.html#v-bind-in-css">v-bind() in CSS</a></li></ul></div>',32)]))}]]);export{p as __pageData,o as default};
